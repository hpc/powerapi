/*
 * Power API v1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: lowell@lanl.gov
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package powerapi

import (
	"encoding/json"
)

// AggregationResetBody Aggregation reset request
type AggregationResetBody struct {
	ResetType *ResetType `json:"ResetType,omitempty"`
	// A list of system URIs to apply the reset to
	TargetURIs *[]string `json:"TargetURIs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AggregationResetBody AggregationResetBody

// NewAggregationResetBody instantiates a new AggregationResetBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregationResetBody() *AggregationResetBody {
	this := AggregationResetBody{}
	return &this
}

// NewAggregationResetBodyWithDefaults instantiates a new AggregationResetBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregationResetBodyWithDefaults() *AggregationResetBody {
	this := AggregationResetBody{}
	return &this
}

// GetResetType returns the ResetType field value if set, zero value otherwise.
func (o *AggregationResetBody) GetResetType() ResetType {
	if o == nil || o.ResetType == nil {
		var ret ResetType
		return ret
	}
	return *o.ResetType
}

// GetResetTypeOk returns a tuple with the ResetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregationResetBody) GetResetTypeOk() (*ResetType, bool) {
	if o == nil || o.ResetType == nil {
		return nil, false
	}
	return o.ResetType, true
}

// HasResetType returns a boolean if a field has been set.
func (o *AggregationResetBody) HasResetType() bool {
	if o != nil && o.ResetType != nil {
		return true
	}

	return false
}

// SetResetType gets a reference to the given ResetType and assigns it to the ResetType field.
func (o *AggregationResetBody) SetResetType(v ResetType) {
	o.ResetType = &v
}

// GetTargetURIs returns the TargetURIs field value if set, zero value otherwise.
func (o *AggregationResetBody) GetTargetURIs() []string {
	if o == nil || o.TargetURIs == nil {
		var ret []string
		return ret
	}
	return *o.TargetURIs
}

// GetTargetURIsOk returns a tuple with the TargetURIs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregationResetBody) GetTargetURIsOk() (*[]string, bool) {
	if o == nil || o.TargetURIs == nil {
		return nil, false
	}
	return o.TargetURIs, true
}

// HasTargetURIs returns a boolean if a field has been set.
func (o *AggregationResetBody) HasTargetURIs() bool {
	if o != nil && o.TargetURIs != nil {
		return true
	}

	return false
}

// SetTargetURIs gets a reference to the given []string and assigns it to the TargetURIs field.
func (o *AggregationResetBody) SetTargetURIs(v []string) {
	o.TargetURIs = &v
}

func (o AggregationResetBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResetType != nil {
		toSerialize["ResetType"] = o.ResetType
	}
	if o.TargetURIs != nil {
		toSerialize["TargetURIs"] = o.TargetURIs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AggregationResetBody) UnmarshalJSON(bytes []byte) (err error) {
	varAggregationResetBody := _AggregationResetBody{}

	if err = json.Unmarshal(bytes, &varAggregationResetBody); err == nil {
		*o = AggregationResetBody(varAggregationResetBody)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ResetType")
		delete(additionalProperties, "TargetURIs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAggregationResetBody struct {
	value *AggregationResetBody
	isSet bool
}

func (v NullableAggregationResetBody) Get() *AggregationResetBody {
	return v.value
}

func (v *NullableAggregationResetBody) Set(val *AggregationResetBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregationResetBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregationResetBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregationResetBody(val *AggregationResetBody) *NullableAggregationResetBody {
	return &NullableAggregationResetBody{value: val, isSet: true}
}

func (v NullableAggregationResetBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregationResetBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


